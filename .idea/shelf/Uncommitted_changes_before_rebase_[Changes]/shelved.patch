Index: .github/workflows/python-package-conda.yml
===================================================================
diff --git a/.github/workflows/python-package-conda.yml b/.github/workflows/python-package-conda.yml
deleted file mode 100644
--- a/.github/workflows/python-package-conda.yml	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
+++ /dev/null	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
@@ -1,34 +0,0 @@
-name: Python Package using Conda
-
-on: [push]
-
-jobs:
-  build-linux:
-    runs-on: ubuntu-latest
-    strategy:
-      max-parallel: 5
-
-    steps:
-    - uses: actions/checkout@v3
-    - name: Set up Python 3.8.16
-      uses: actions/setup-python@v3
-      with:
-        python-version: '3.8.16'
-    - name: Add conda to system path
-      run: |
-        # $CONDA is an environment variable pointing to the root of the miniconda directory
-        echo $CONDA/bin >> $GITHUB_PATH
-    - name: Install dependencies
-      run: |
-        conda env update --file environment.yml --name base
-    - name: Lint with flake8
-      run: |
-        conda install flake8
-        # stop the build if there are Python syntax errors or undefined names
-        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
-        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
-        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
-    - name: Test with pytest
-      run: |
-        conda install pytest
-        pytest
Index: .gitignore
===================================================================
diff --git a/.gitignore b/.gitignore
deleted file mode 100644
--- a/.gitignore	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
+++ /dev/null	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
@@ -1,160 +0,0 @@
-# Byte-compiled / optimized / DLL files
-__pycache__/
-*.py[cod]
-*$py.class
-
-# C extensions
-*.so
-
-# Distribution / packaging
-.Python
-build/
-develop-eggs/
-dist/
-downloads/
-eggs/
-.eggs/
-lib/
-lib64/
-parts/
-sdist/
-var/
-wheels/
-share/python-wheels/
-*.egg-info/
-.installed.cfg
-*.egg
-MANIFEST
-
-# PyInstaller
-#  Usually these files are written by a python script from a template
-#  before PyInstaller builds the exe, so as to inject date/other infos into it.
-*.manifest
-*.spec
-
-# Installer logs
-pip-log.txt
-pip-delete-this-directory.txt
-
-# Unit test / coverage reports
-htmlcov/
-.tox/
-.nox/
-.coverage
-.coverage.*
-.cache
-nosetests.xml
-coverage.xml
-*.cover
-*.py,cover
-.hypothesis/
-.pytest_cache/
-cover/
-
-# Translations
-*.mo
-*.pot
-
-# Django stuff:
-*.log
-local_settings.py
-db.sqlite3
-db.sqlite3-journal
-
-# Flask stuff:
-instance/
-.webassets-cache
-
-# Scrapy stuff:
-.scrapy
-
-# Sphinx documentation
-docs/_build/
-
-# PyBuilder
-.pybuilder/
-target/
-
-# Jupyter Notebook
-.ipynb_checkpoints
-
-# IPython
-profile_default/
-ipython_config.py
-
-# pyenv
-#   For a library or package, you might want to ignore these files since the code is
-#   intended to run in multiple environments; otherwise, check them in:
-# .python-version
-
-# pipenv
-#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
-#   However, in case of collaboration, if having platform-specific dependencies or dependencies
-#   having no cross-platform support, pipenv may install dependencies that don't work, or not
-#   install all needed dependencies.
-#Pipfile.lock
-
-# poetry
-#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
-#   This is especially recommended for binary packages to ensure reproducibility, and is more
-#   commonly ignored for libraries.
-#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
-#poetry.lock
-
-# pdm
-#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
-#pdm.lock
-#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
-#   in version control.
-#   https://pdm.fming.dev/#use-with-ide
-.pdm.toml
-
-# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
-__pypackages__/
-
-# Celery stuff
-celerybeat-schedule
-celerybeat.pid
-
-# SageMath parsed files
-*.sage.py
-
-# Environments
-.env
-.venv
-env/
-venv/
-ENV/
-env.bak/
-venv.bak/
-
-# Spyder project settings
-.spyderproject
-.spyproject
-
-# Rope project settings
-.ropeproject
-
-# mkdocs documentation
-/site
-
-# mypy
-.mypy_cache/
-.dmypy.json
-dmypy.json
-
-# Pyre type checker
-.pyre/
-
-# pytype static type analyzer
-.pytype/
-
-# Cython debug symbols
-cython_debug/
-
-# PyCharm
-#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
-#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
-#  and can be added to the global gitignore or merged into this file.  For a more nuclear
-#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
-.idea/
Index: README.md
===================================================================
diff --git a/README.md b/README.md
deleted file mode 100644
--- a/README.md	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
+++ /dev/null	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
@@ -1,3 +0,0 @@
-# OpenCV_Py
-深智 - 洪錦魁 - 王者歸來系列
-OpenCV 影像創意邁向AI視覺
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
+++ /dev/null	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
@@ -1,8 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
-# Editor-based HTTP Client requests
-/httpRequests/
-# Datasource local storage ignored files
-/dataSources/
-/dataSources.local.xml
Index: ch_6/ch6_5.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ch_6/ch6_5.py b/ch_6/ch6_5.py
new file mode 100644
--- /dev/null	(date 1689429052070)
+++ b/ch_6/ch6_5.py	(date 1689429052070)
@@ -0,0 +1,11 @@
+import cv2
+import numpy as np
+
+blue = np.zeros((2, 3, 3), np.uint8)
+blue[:, :, 0] = 255 # 0 - blue ; 1 - green ; 2 - red
+print(f"blue = \n{blue}")
+print(f"blue[0, 1] before modified - {blue[0, 1]}")
+
+blue[0,1] = [50, 100, 150]
+print(f"blue[0, 1] after modified = {blue[0, 1]}")
+print(f"blue = \n{blue}")
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" project-jdk-name=\"AI202307 (2)\" project-jdk-type=\"Python SDK\" />\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
+++ b/.idea/misc.xml	(date 1689643591002)
@@ -1,4 +1,4 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" project-jdk-name="AI202307 (2)" project-jdk-type="Python SDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="OpenCV" project-jdk-type="Python SDK" />
 </project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
+++ b/.idea/vcs.xml	(date 1689643591013)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/OpenCV_Py.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\" />\r\n    <orderEntry type=\"jdk\" jdkName=\"AI202307 (2)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/OpenCV_Py.iml b/.idea/OpenCV_Py.iml
--- a/.idea/OpenCV_Py.iml	(revision 3d226df2cdefedd6eb923e05c50b89d21a290d4e)
+++ b/.idea/OpenCV_Py.iml	(date 1689643590990)
@@ -2,7 +2,7 @@
 <module type="PYTHON_MODULE" version="4">
   <component name="NewModuleRootManager">
     <content url="file://$MODULE_DIR$" />
-    <orderEntry type="jdk" jdkName="AI202307 (2)" jdkType="Python SDK" />
+    <orderEntry type="jdk" jdkName="OpenCV" jdkType="Python SDK" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
Index: ch_6/ch6_1.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ch_6/ch6_1.py b/ch_6/ch6_1.py
new file mode 100644
--- /dev/null	(date 1689672356008)
+++ b/ch_6/ch6_1.py	(date 1689672356008)
@@ -0,0 +1,17 @@
+# 1. Create 5x12 Gray array
+# 2. print the pixel of [1,3] and modify it to 255
+# 3. display these two array
+
+import cv2
+import numpy as np
+
+image = np.zeros((5, 12), np.uint8)
+image_clone = image.copy()
+image[1, 4] = 255
+
+print(f"修改前 image = \n{image_clone}")
+print(f"修改前 image[1, 4] = {image_clone[1, 4]}")
+print("-" * 70)
+
+print(f"修改後 image = \n{image}")
+print(f"修改後 image[1, 4] = {image[1,4]}")
Index: ch_6/ch6_7.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ch_6/ch6_7.py b/ch_6/ch6_7.py
new file mode 100644
--- /dev/null	(date 1689429867103)
+++ b/ch_6/ch6_7.py	(date 1689429867103)
@@ -0,0 +1,35 @@
+import cv2
+
+img = cv2.imread('jk.jpg')
+img_clone = img.copy()
+
+# purple
+for y in range(115, 125):
+    for x in range(110, 210):
+        img[y, x] = [255, 0, 255]
+
+# white
+for z in range(125, 135):
+    for y in range(110, 210):
+        for x in range(0, 3):
+            img[z, y, x] = 255
+
+# yellow
+for y in range(135, 145):
+    for x in range(110, 210):
+        img[y, x] = [0, 255, 255]
+
+cv2.imshow("Original Image", img_clone)
+cv2.imshow("Modified Image", img)
+
+print(f"Before Modified - img[115, 110] = {img_clone[115, 110]}")
+print(f" After Modified - img[115, 110] = {img[115, 110]}")
+print("-" * 70)
+print(f"Before Modified - img[125, 110] = {img_clone[125, 110]}")
+print(f" After Modified - img[125, 110] = {img[125, 110]}")
+print("-" * 70)
+print(f"Before Modified - img[135, 110] = {img_clone[135, 110]}")
+print(f" After Modified - img[135, 110] = {img[135, 110]}")
+
+cv2.waitKey(0)
+cv2.destroyAllWindows()
Index: ch_6/ch6_6.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ch_6/ch6_6.py b/ch_6/ch6_6.py
new file mode 100644
--- /dev/null	(date 1689429354958)
+++ b/ch_6/ch6_6.py	(date 1689429354958)
@@ -0,0 +1,14 @@
+# modified one pixel
+import cv2
+import numpy as np
+
+blue = np.zeros((2, 3, 3), np.uint8)
+blue[:, :, 0] = 255
+
+print(f"blue = \n {blue}")
+print(f"blue[0, 1, 2] before modified = {blue[0, 1, 2]}")
+
+blue[0, 1, 2] = 50
+
+print(f"blue[0, 1, 2] after modified = {blue[0, 1, 2]}")
+print(f"blue = \n {blue}")
Index: ch_6/ch6_4.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ch_6/ch6_4.py b/ch_6/ch6_4.py
new file mode 100644
--- /dev/null	(date 1689342281860)
+++ b/ch_6/ch6_4.py	(date 1689342281860)
@@ -0,0 +1,31 @@
+# draw ch6_3.py
+# resize the array from 2x3 to 100x150
+
+# 1. create 3 array 2x3 to split blue, green, and red
+# 2. print the contents of these arraies
+
+import cv2
+import numpy as np
+
+height = 100
+width  = 150
+# create blue channel
+blue_img = np.zeros((height, width, 3), np.uint8)
+blue_img[:, :, 0] = 255
+
+# create green channel
+green_img = np.zeros((height, width, 3), np.uint8)
+green_img[:, :, 1] = 255
+
+# create red channel
+red_img = np.zeros((height, width, 3), np.uint8)
+red_img[:, :, 2] = 255
+
+# draw the image
+cv2.imshow("blue image", blue_img)
+cv2.imshow("green image", green_img)
+cv2.imshow("red image", red_img)
+
+# close all image windows
+cv2.waitKey(0)
+cv2.destroyAllWindows()
Index: ch_6/ch6_3.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ch_6/ch6_3.py b/ch_6/ch6_3.py
new file mode 100644
--- /dev/null	(date 1689342281851)
+++ b/ch_6/ch6_3.py	(date 1689342281851)
@@ -0,0 +1,27 @@
+# 1. create 3 array 2x3 to split blue, green, and red
+# 2. print the contents of these arraies
+
+import cv2
+import numpy as np
+
+height = 2
+width  = 3
+
+# create blue channel
+blue_img = np.zeros((height, width, 3), np.uint8)
+blue_img[:, :, 0] = 255
+
+# create green channel
+green_img = np.zeros((height, width, 3), np.uint8)
+green_img[:, :, 1] = 255
+
+# create red channel
+red_img = np.zeros((height, width, 3), np.uint8)
+red_img[:, :, 2] = 255
+
+# print the contents
+print(f"blue image = \n{blue_img}")
+print("-" * 70)
+print(f"green image = \n{green_img}")
+print("-" * 70)
+print(f"red image = \n{red_img}")
Index: ch_6/ch6_2.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ch_6/ch6_2.py b/ch_6/ch6_2.py
new file mode 100644
--- /dev/null	(date 1689341590826)
+++ b/ch_6/ch6_2.py	(date 1689341590826)
@@ -0,0 +1,12 @@
+# 產生白色長條遮住眼睛部位
+import cv2
+
+img = cv2.imread('jk.jpg', cv2.IMREAD_GRAYSCALE)
+cv2.imshow("Before modified", img)
+for y in range(120, 140):
+    for x in range(110, 210):
+        img[y, x] = 255
+cv2.imshow("After modified", img)
+
+cv2.waitKey(0)
+cv2.destroyAllWindows()
diff --git a/ch_6/ch6_8.py b/ch_6/ch6_8.py
new file mode 100644
